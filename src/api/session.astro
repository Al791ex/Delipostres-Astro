---
import loginSave from '../utils/login'; 
let token = "none";
let redir = "/delipostres/login";
let cookieName = import.meta.env.COOKIE_NAME || "_Security_Login_";
let maxAge = 604800;
if (Astro.request.method === "POST") {
  const data = Object.fromEntries(new URLSearchParams(await Astro.request.text()));
  const d = await loginSave(data.email, data.password, Number(import.meta.env.MAX_AGE || 604800));
  if (d.success == true) {
    token = d?.token || "none";
    redir = "/";
    maxAge = d?.max || 604800;
  }
} else {
  return Astro.redirect("/delipostres/");
}
---

<script
  define:vars={{
    token,
    redir,
    maxAge,
    cookieName,
  }}
  is:inline
>
  if (token !== "none") {
    document.cookie = `${cookieName}=${token}; Max-Age=${maxAge}; path=/`;
    window.location.href = redir;
  }


/*
// Importa el módulo para la conexión a la base de datos MySQL
const mysql = require('mysql');
// Importa el módulo para manejar las cookies
import Cookies from 'cookies'; 

let token = "none";
let redir = "/delipostres/login";
let cookieName = import.meta.env.COOKIE_NAME || "_Security_Login_";
let maxAge = 604800;

// Configuración de la conexión a la base de datos
const connection = mysql.createConnection({
  host: 'tu_host',
  user: 'tu_usuario',
  password: 'tu_contraseña',
  database: 'tu_base_de_datos'
});

// Manejo de la solicitud
if (Astro.request.method === "POST") {
  const data = Object.fromEntries(new URLSearchParams(await Astro.request.text()));

  // Ejecución de la consulta para guardar el token en la base de datos
  connection.query('INSERT INTO tokens (token, maxAge) VALUES (?, ?)', [data.email, data.password, Number(import.meta.env.MAX_AGE || 604800)], (error, results, fields) => {
    if (error) {
      redir = "/login"; // Redirige a la página de inicio de sesión en caso de error
    } else {
      token = "token_generado"; // Suponiendo que obtienes el token generado después de la inserción en la base de datos
      redir = "/"; // Redirige a la página principal en caso de éxito
      maxAge = import.meta.env.MAX_AGE || 604800;
    }
  });
} else {
  return Astro.redirect("/login");
}

// Cierre de la conexión a la base de datos
connection.end();

// Uso de la biblioteca Cookies para manejar las cookies en el frontend
const cookies = new Cookies();
if (token !== "none") {
  cookies.set(cookieName, token, { maxAge: maxAge, path: '/' });
  window.location.href = redir;
}

*/







</script>